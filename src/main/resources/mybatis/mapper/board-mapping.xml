<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="boardmapper.BoardDAO">
    <insert id="insertBoard" parameterType="boarddto">
        insert into board values(null, #{boardname}, #{title}, #{contents}, #{writer}, #{pw}, 0, now(), 0)
    </insert>

	<select id="pagingBoardList" parameterType="map" resultType="boarddto">
    	select * from board
    	<where>
        	<if test="boardname != null and boardname != '전체'">
            	and boardname = #{boardname}
        	</if>
    	</where>
    		order by writingtime desc
    		limit
    	<foreach collection="limit" item="a" separator=",">
        	#{a}
    	</foreach>
	</select>

    <select id="totalCount" resultType="int">
        select count(*) from board
        <where>
        	<if test="boardname != null and boardname != '전체'">
            	and boardname = #{boardname}
        	</if>
    	</where>
    </select>

    <update id="updateViewcount" parameterType="int">
        update board set viewcount = viewcount+1 where seq=#{seq}
    </update>

    <select id="getNextSeq" parameterType="int" resultType="java.lang.Integer">
        SELECT COALESCE(MIN(seq), 0) FROM board WHERE seq > #{seq} ORDER BY seq asc LIMIT 1
    </select>

    <select id="getPrevSeq" parameterType="int" resultType="java.lang.Integer">
        SELECT COALESCE(MIN(seq), 0) FROM board WHERE seq &lt; #{seq} ORDER BY seq desc LIMIT 1
    </select>

    <select id="getDetail" parameterType="int" resultType="boarddto">
        select * from board where seq=#{seq}
    </select>

    <delete id="deleteBoard"  parameterType="int">
        delete from board where seq=#{seq}
    </delete>

    <update id="updateBoard" parameterType="boarddto">
        update board set title=#{title} , contents=#{contents}, writingtime=now() where seq=#{seq}
    </update>

    <select id="boardSearchList" resultType="boarddto" parameterType="java.util.HashMap">
        select * from board where 
        <choose>
            <when test="searchcolname == null">
                title like #{searchvalue} or contents like #{searchvalue} or writer like #{searchvalue}
            </when>
            <otherwise>
                ${searchcolname} like #{searchvalue}  
            </otherwise>
        </choose>
        order by writingtime desc limit 
        <foreach collection="limit" item="a"  separator=",">
            #{a}
        </foreach>
    </select>

    <select id="boardSearchCount" resultType="int" parameterType="java.util.HashMap">
        select count(*) from board where 
        <choose>
            <when test="searchcolname == null">
                title like #{searchvalue} or contents like #{searchvalue} or writer like #{searchvalue}
            </when>
            <otherwise>
                ${searchcolname} like #{searchvalue}  
            </otherwise>
        </choose>
    </select>
</mapper>